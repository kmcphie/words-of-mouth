{"ast":null,"code":"var _jsxFileName = \"/Users/aidabaradari/Desktop/words-of-mouth/wom-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ReflectiveQuestionGenerator } from './ReflectiveQuestions.js';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReflectiveQuestionApp = () => {\n  _s();\n  const [currentQuestion, setCurrentQuestion] = useState(\"\");\n  const [questionGenerator] = useState(new ReflectiveQuestionGenerator());\n  const [isBrushing, setIsBrushing] = useState(false);\n  const [brushingTime, setBrushingTime] = useState(0);\n  const [showSettings, setShowSettings] = useState(false);\n  const [customQuestion, setCustomQuestion] = useState(\"\");\n  const [customCategory, setCustomCategory] = useState(\"gratitude\");\n\n  // Generate a new question\n  const generateNewQuestion = () => {\n    setCurrentQuestion(questionGenerator.generateQuestion());\n  };\n\n  // Start brushing session\n  const startBrushing = () => {\n    setIsBrushing(true);\n    setBrushingTime(0);\n    generateNewQuestion();\n  };\n\n  // End brushing session\n  const endBrushing = () => {\n    setIsBrushing(false);\n  };\n\n  // Add custom question\n  const addCustomQuestion = () => {\n    if (customQuestion.trim() !== \"\") {\n      questionGenerator.addCustomQuestion(customCategory, customQuestion);\n      setCustomQuestion(\"\");\n      alert(\"Question added successfully!\");\n    }\n  };\n\n  // Timer effect\n  useEffect(() => {\n    let timer;\n    if (isBrushing) {\n      timer = setInterval(() => {\n        setBrushingTime(prev => {\n          const newTime = prev + 1;\n          return newTime;\n        });\n      }, 1000);\n    }\n    return () => clearInterval(timer);\n  }, [isBrushing]);\n\n  // Audio would be implemented here in a real app\n  // This would connect to text-to-speech to read the questions\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Word of Mouth: Your Talking Toothbrush\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Take Care of Your Mental and Your Dental Health!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: !isBrushing ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setup-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Evening Reflections\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Ready to brush your teeth and reflect on your day?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"primary-button\",\n          onClick: startBrushing,\n          children: \"Start Brushing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"secondary-button\",\n          onClick: () => setShowSettings(!showSettings),\n          children: showSettings ? \"Hide Settings\" : \"Show Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), showSettings && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"settings-panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Add Custom Reflection Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: customCategory,\n            onChange: e => setCustomCategory(e.target.value),\n            children: Object.keys(questionGenerator.categories).map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: cat,\n              children: cat.charAt(0).toUpperCase() + cat.slice(1)\n            }, cat, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter your custom reflection question\",\n            value: customQuestion,\n            onChange: e => setCustomQuestion(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"secondary-button\",\n            onClick: addCustomQuestion,\n            children: \"Add Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brushing-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timer\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [Math.floor(brushingTime / 60), \":\", (brushingTime % 60).toString().padStart(2, '0')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reflection-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Evening Reflection\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"question\",\n            children: currentQuestion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"primary-button\",\n          onClick: endBrushing,\n          children: \"Finish Brushing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(ReflectiveQuestionApp, \"P+4xXHFnxcYaIOes85Fia9vW0/c=\");\n_c = ReflectiveQuestionApp;\nexport default ReflectiveQuestionApp;\nvar _c;\n$RefreshReg$(_c, \"ReflectiveQuestionApp\");","map":{"version":3,"names":["React","useState","useEffect","ReflectiveQuestionGenerator","jsxDEV","_jsxDEV","ReflectiveQuestionApp","_s","currentQuestion","setCurrentQuestion","questionGenerator","isBrushing","setIsBrushing","brushingTime","setBrushingTime","showSettings","setShowSettings","customQuestion","setCustomQuestion","customCategory","setCustomCategory","generateNewQuestion","generateQuestion","startBrushing","endBrushing","addCustomQuestion","trim","alert","timer","setInterval","prev","newTime","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","onChange","e","target","Object","keys","categories","map","cat","charAt","toUpperCase","slice","type","placeholder","Math","floor","toString","padStart","_c","$RefreshReg$"],"sources":["/Users/aidabaradari/Desktop/words-of-mouth/wom-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ReflectiveQuestionGenerator } from './ReflectiveQuestions.js';\nimport './App.css';\n\nconst ReflectiveQuestionApp = () => {\n  const [currentQuestion, setCurrentQuestion] = useState(\"\");\n  const [questionGenerator] = useState(new ReflectiveQuestionGenerator());\n  const [isBrushing, setIsBrushing] = useState(false);\n  const [brushingTime, setBrushingTime] = useState(0);\n  const [showSettings, setShowSettings] = useState(false);\n  const [customQuestion, setCustomQuestion] = useState(\"\");\n  const [customCategory, setCustomCategory] = useState(\"gratitude\");\n  \n  // Generate a new question\n  const generateNewQuestion = () => {\n    setCurrentQuestion(questionGenerator.generateQuestion());\n  };\n  \n  // Start brushing session\n  const startBrushing = () => {\n    setIsBrushing(true);\n    setBrushingTime(0);\n    generateNewQuestion();\n  };\n  \n  // End brushing session\n  const endBrushing = () => {\n    setIsBrushing(false);\n  };\n  \n  // Add custom question\n  const addCustomQuestion = () => {\n    if (customQuestion.trim() !== \"\") {\n      questionGenerator.addCustomQuestion(customCategory, customQuestion);\n      setCustomQuestion(\"\");\n      alert(\"Question added successfully!\");\n    }\n  };\n  \n  // Timer effect\n  useEffect(() => {\n    let timer;\n    if (isBrushing) {\n      timer = setInterval(() => {\n        setBrushingTime(prev => {\n          const newTime = prev + 1;\n          return newTime;\n        });\n      }, 1000);\n    }\n    \n    return () => clearInterval(timer);\n  }, [isBrushing]);\n  \n  // Audio would be implemented here in a real app\n  // This would connect to text-to-speech to read the questions\n  \n  return (\n    <div className=\"app-container\">\n      <header>\n        <h1>Word of Mouth: Your Talking Toothbrush</h1>\n        <p>Take Care of Your Mental and Your Dental Health!</p>\n      </header>\n      \n      <main>\n        {!isBrushing ? (\n          <div className=\"setup-section\">\n            <h2>Evening Reflections</h2>\n            <p>Ready to brush your teeth and reflect on your day?</p>\n            <button className=\"primary-button\" onClick={startBrushing}>\n              Start Brushing\n            </button>\n            <button \n              className=\"secondary-button\" \n              onClick={() => setShowSettings(!showSettings)}\n            >\n              {showSettings ? \"Hide Settings\" : \"Show Settings\"}\n            </button>\n            \n            {showSettings && (\n              <div className=\"settings-panel\">\n                <h3>Add Custom Reflection Question</h3>\n                <select \n                  value={customCategory}\n                  onChange={(e) => setCustomCategory(e.target.value)}\n                >\n                  {Object.keys(questionGenerator.categories).map(cat => (\n                    <option key={cat} value={cat}>{cat.charAt(0).toUpperCase() + cat.slice(1)}</option>\n                  ))}\n                </select>\n                <input\n                  type=\"text\"\n                  placeholder=\"Enter your custom reflection question\"\n                  value={customQuestion}\n                  onChange={(e) => setCustomQuestion(e.target.value)}\n                />\n                <button className=\"secondary-button\" onClick={addCustomQuestion}>\n                  Add Question\n                </button>\n              </div>\n            )}\n          </div>\n        ) : (\n          <div className=\"brushing-section\">\n            <div className=\"timer\">\n              <span>{Math.floor(brushingTime / 60)}:{(brushingTime % 60).toString().padStart(2, '0')}</span>\n            </div>\n            \n            <div className=\"reflection-card\">\n              <h2>Evening Reflection</h2>\n              <p className=\"question\">{currentQuestion}</p>\n            </div>\n            \n            <button className=\"primary-button\" onClick={endBrushing}>\n              Finish Brushing\n            </button>\n          </div>\n        )}\n      </main>\n    </div>\n  );\n};\n\nexport default ReflectiveQuestionApp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}